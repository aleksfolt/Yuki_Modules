from pyrogram import Client, filters
import asyncio
import json

CONFIG_FILE = "config.json"

with open(CONFIG_FILE, "r") as file:
    config_data = json.load(file)
    prefix_userbot = config_data['prefix']

cinfo = f"üìù`{prefix_userbot}spam`"
ccomand = f" –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º. –ü—Ä–∏–º–µ—Ä: `{prefix_userbot}spam 10 –ø—Ä–∏–≤–µ—Ç 0.1`"

def register_module(app: Client):
    @app.on_message(filters.me & filters.command("spam", prefixes=prefix_userbot))
    async def spam(_, message):
        try:
            parts = message.text.split(" ", maxsplit=3)
            count = int(parts[1])
            text = parts[2]
            delay = float(parts[3])

            for _ in range(count):
                await message.reply_text(text)
                await asyncio.sleep(delay)

        except IndexError:
            await message.reply_text("**‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: `.spam 10 –ø—Ä–∏–≤–µ—Ç 0.1`**")
        except ValueError:
            await message.reply_text("**‚ùå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∑–∞–¥–µ—Ä–∂–∫–∞ —É–∫–∞–∑–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ.**")
        except Exception as e:
            await message.reply_text(f"**‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}**")
