from pyrogram import Client, filters
import re

with open("Yuki.bot", "r") as file:
    data = {}
    for line in file:
        key, value = line.strip().split('=')
        data[key] = value
    prefix_userbot = data['prefix']
    OWNER_ID = int(data['user_id'])
    print(OWNER_ID)

cinfo = f"üîó`{prefix_userbot}check_buttons`"
ccomand = " –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /start —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –±–æ—Ç—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∏–∑ —Å—Å—ã–ª–∫–∏. –ü—Ä–∏–º–µ—Ä: `check_buttons`"

def is_owner(_, __, message):
    return message.from_user.id == OWNER_ID

def register_module(app: Client):
    @app.on_message(filters.create(is_owner) & filters.command("check_buttons", prefixes=prefix_userbot))
    async def check_buttons(_, message):
        if message.reply_markup:
            for row in message.reply_markup.inline_keyboard:
                for button in row:
                    if button.url:
                        match = re.match(r"http://t.me/(send|cryptobot|cryptotestnetbot)\?start=(.+)", button.url)
                        if match:
                            bot_name, start_param = match.groups()
                            await message.reply(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start {start_param} –±–æ—Ç—É @{bot_name}")
                            await app.send_message(f"@{bot_name}", f"/start {start_param}")
